server {
    listen 80;
    server_name dev.bapihvac.com;

    # Redirect plain HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name dev.bapihvac.com;

    ssl_certificate /etc/nginx/certs/dev.bapihvac.com.crt;
    ssl_certificate_key /etc/nginx/certs/dev.bapihvac.com.key;

    root /var/www/html;
    index index.php index.html;

    # Basic security headers (adjust to taste)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Replace the origin below with your frontend origin (or use FRONEND_ORIGIN from env)
    set $frontend_origin "https://app.dev.bapihvac.com:3000";

    # Protect wp-admin if you have an htpasswd mounted at /etc/nginx/.htpasswd
    location ^~ /wp-admin {
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        try_files $uri $uri/ /index.php?$args;
    }

    # Allow access to wp-login (still protected by basic-auth if you prefer)
    location = /wp-login.php {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # CORS-enabled REST API (wp-json)
    location ~* ^/wp-json/ {
        if ($http_origin ~* ($frontend_origin)) {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-WP-Nonce';
        }
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        try_files $uri $uri/ /index.php?$args;
    }

    # CORS-enabled GraphQL endpoint
    location ~* ^/graphql {
        if ($http_origin ~* ($frontend_origin)) {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        }
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        try_files $uri $uri/ /index.php?$args;
    }

    # Serve static assets directly
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP-FPM handling
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php:9000;
    }

    # Optional: increase client body size if uploads are large
    client_max_body_size 50M;
}